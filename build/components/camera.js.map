{"version":3,"sources":["../../app/components/camera.js"],"names":["Camera","callback","GPhoto","gphoto2","GPhoto2","setLogLevel","self","list","length","camera","console","log","model","utils","getConfig","capturetarget","setConfigValue","err","undefined","settings","filepath","getPhotosDirectory","getTimestamp","webFilepath","getWebAppPhotosDirectory","maxImageSize","keep","takePicture","download","data","resize","Number","toFile","default"],"mappings":"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","file":"camera.js","sourcesContent":["/* \n * This file is part of \"photo-booth\" \n * Copyright (c) 2018 Philipp Trenz\n *\n * For more information on the project go to\n * <https://github.com/philipptrenz/photo-booth>\n * \n * This program is free software: you can redistribute it and/or modify  \n * it under the terms of the GNU General Public License as published by  \n * the Free Software Foundation, version 3.\n *\n * This program is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU \n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License \n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport sharp from 'sharp';\nimport gphoto2 from 'gphoto2';\n\nimport utils from \"./utils.js\";\n\nclass Camera {\n\n\tconstructor() {\n\t}\n\n\t/*\n\t* Detect and configure camera\n\t*/\n\tinitialize(callback) {\n\t\tthis.GPhoto = new gphoto2.GPhoto2();\n\n\t\t// Negative value or undefined will disable logging, levels 0-4 enable it.\n\t\tthis.GPhoto.setLogLevel(-1);\n\n\t\tvar self = this;\n\t\tthis.GPhoto.list(function (list) {\n\t\t\tif (list.length === 0) {\n\t\t\t\tcallback(false, 'No camera found', null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.camera = list[0];\n\n\t\t\tconsole.log('gphoto2: Found', self.camera.model);\n\n\t\t\tif (utils.getConfig().gphoto2.capturetarget) {\n\t\t\t\tself.camera.setConfigValue('capturetarget', utils.getConfig().gphoto2.capturetarget, function (err) {\n\t\t\t\t\tif (err){\n\t\t\t\t\t\tcallback(false, 'setting config failed', err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t\n\n\tisInitialized(){\n\t\treturn (this.camera !== undefined);\n\t}\n\n\tisConnected(callback)Â {\n\t\tthis.camera.getConfig(function (err, settings) {\n\t\t\tif (err) {\n\t\t\t\tif (callback) callback(false, 'connection test failed', err);\n\t\t\t} else {\n\t\t\t\tself.camera == undefined;\t// needs to be reinitialized\n\t\t\t\tif (callback) callback(true);\n\t\t\t}\n\t\t});\n\t}\n\n\ttakePicture(callback) {\n\t\tvar self = this;\n\n\t\tif (self.camera === undefined) {\n\t\t\tcallback(-1, 'camera not initialized', null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst filepath = utils.getPhotosDirectory() + \"img_\" + utils.getTimestamp() + \".jpg\";\n\t\tconst webFilepath = utils.getWebAppPhotosDirectory() + \"img_\" + utils.getTimestamp() + \".jpg\";\n\t\tconst maxImageSize = utils.getConfig().maxImageSize ? utils.getConfig().maxImageSize : 1500;\n\t\tconst keep = utils.getConfig().gphoto2.keep === true ?  true : false;\n\n\t\tself.camera.takePicture({ download: true, keep: keep }, function (err, data) {\n\n\t\t\tif (err) {\n\t\t\t\tself.camera = undefined;\t// needs to be reinitialized\n\t\t\t\tcallback(-2, 'connection to camera failed', err);\n\t\t\t\treturn;\n\t\t\t} \n\n\t\t\tsharp(data) // resize image to given maxSize\n\t\t\t\t.resize(Number(maxImageSize)) // scale width to 1500\n\t\t\t\t.toFile(filepath, function(err) {\n\t\t\t\t\t\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(-3, 'resizing image failed', err)\n\t\t\t\t} else {\n\t\t\t\t\tcallback(0, filepath, webFilepath);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t}\n\n}\n\n/*\n * Module exports for connection\n */\nlet camera = new Camera();\nexport { camera as default };"]}